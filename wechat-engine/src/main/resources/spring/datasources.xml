<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<description>数据访问相关的配置项</description>
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.current_session_context_class">${hibernate.current_session_context_class}</prop>
			</props>
		</property>
		<property name="packagesToScan" value="edu.buaa.scse.niu.wechat.engine.entity" />
	</bean>

	<!-- 开发时使用的数据源及相关配置参数 -->
	<!-- <beans profile="dev"> <jdbc:embedded-database id="dataSource"> <jdbc:script 
		location="classpath:sql/h2.ats.sql" /> </jdbc:embedded-database> <context:property-placeholder 
		location="classpath:db.dev.properties" /> </beans> -->

	<!-- 发布前测试时使用的数据源及相关配置参数 C3P0是开源的JDBC连接池 -->
	<beans profile="test">
		<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
			destroy-method="close">
			<property name="driverClass" value="${db.driverClass}" />
			<property name="jdbcUrl" value="${db.jdbcUrl}" />
			<property name="user" value="${db.user}" />
			<property name="password" value="${db.password}" />
			<property name="maxPoolSize" value="30" />
			<property name="minPoolSize" value="3" />
			<property name="initialPoolSize" value="1" />
			<property name="maxIdleTime" value="60" />
		</bean>
		<context:property-placeholder location="classpath:db.test.properties" ignore-unresolvable="true" />
	</beans>

	<!-- 产品发布时使用的数据源及相关配置参数 -->
	<beans profile="product">
		<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
			destroy-method="close">
			<property name="driverClass" value="${db.driverClass}" />
			<property name="jdbcUrl" value="${db.jdbcUrl}" />
			<property name="user" value="${db.user}" />
			<property name="password" value="${db.password}" />
			<property name="maxPoolSize" value="30" />
			<property name="minPoolSize" value="3" />
			<property name="initialPoolSize" value="1" />
			<property name="maxIdleTime" value="60" />
		</bean>
		<context:property-placeholder location="classpath:db.product.properties" ignore-unresolvable="true" />
	</beans>
	
</beans>
